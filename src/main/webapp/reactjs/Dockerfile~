# ===== Build stage =====
FROM node:20-alpine AS builder
WORKDIR /app

# Copy manifest(s)
COPY package.json ./
# Copy lockfile only if it exists (doesn't fail if missing)
COPY package-lock.json* ./

# Prefer ci when lock exists, else install
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Copy the rest and build
COPY . .
RUN npm run build

# ===== Runtime stage (nginx) =====
FROM nginx:alpine
# nginx conf that proxies /api to the backend service
COPY nginx.conf /etc/nginx/conf.d/default.conf
# static build
COPY --from=builder /app/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

